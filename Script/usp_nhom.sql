/*----------------------------------------------------------
MASV:
HO TEN CAC THANH VIEN NHOM:
LAB: 03 - NHOM
NGAY:
----------------------------------------------------------*/
-- CAU LENH TAO STORED PROCEDURE
--USE MASTER
USE QLSVNhom
GO

GO
-- i.
--DROP PROCEDURE SP_INS_PUBLIC_NHANVIEN
CREATE OR ALTER PROCEDURE SP_INS_PUBLIC_ENCRYPT_NHANVIEN(
	@MaNV VARCHAR(20),
	@HOTEN NVARCHAR(100),
    @EMAIL VARCHAR(20) = NULL,
    @LUONG VARBINARY(2048) = NULL,
    @TENDN NVARCHAR(100),
	@MATKHAU VARBINARY(2048),
	@PUBKEY VARCHAR(20)
)
AS
BEGIN
	INSERT INTO NHANVIEN
		VALUES (@MaNV, @HOTEN, @EMAIL, @LUONG, @TENDN, @MATKHAU, @PUBKEY)
END;
GO

EXEC SP_INS_PUBLIC_ENCRYPT_NHANVIEN 'NV01', 'NGUYEN THE ANH', 'NTA@GMAIL.COM', 0x002DC6C0, 'NTA', 0xC35A37F0BCA08AFA583247CC461CAD9C8082A47C ,'pubpub'
GO

--select convert(varbinary, '300000')
--select hashbytes('SHA1', 'abcd12')

-- Extra
--SELECT * FROM NHANVIEN
--DELETE FROM NHANVIEN WHERE MANV = 'NV01'

-- ii. 
CREATE OR ALTER PROCEDURE SP_SEL_PUBLIC_ENCRYPT_NHANVIEN
AS
    SELECT MANV, HOTEN, EMAIL, LUONG
	FROM NHANVIEN NV;
GO

--EXEC SP_SEL_PUBLIC_ENCRYPT_NHANVIEN 

-- d)
-- Tao user NVA, NVB
--EXEC SP_INS_PUBLIC_NHANVIEN 'NV01', 'NGUYEN VAN A', 'nva@yahoo.com', 3000000, 'NVA', N'123456'
--EXEC SP_INS_PUBLIC_NHANVIEN 'NV02', 'NGUYEN VAN B', 'nvb@yahoo.com', 2000000, 'NVB', N'1234567'
GO
-- SELECT * FROM NHANVIEN

CREATE OR ALTER PROCEDURE SP_INS_SINHVIEN(
    @MASV NVARCHAR(20),
    @HOTEN NVARCHAR(100),
    @NGAYSINH DATETIME,
    @DIACHI NVARCHAR(200),
    @MALOP VARCHAR(20),
    @TENDN NVARCHAR(100),
    @MATKHAU VARBINARY(2048)
)
AS 
BEGIN
	-- SET DEFAULT PASSWORD = 123
	DECLARE @BYTE VARBINARY(2048)
	SET @BYTE = HASHBYTES('MD5', '123')
	IF @MATKHAU = NULL
		SET @MATKHAU = @BYTE

	INSERT INTO SINHVIEN 
		VALUES(@MASV, @HOTEN, @NGAYSINH, @DIACHI, @MALOP, @TENDN, @MATKHAU)
END
--EXEC SP_INS_SINHVIEN N'SV01', 'NGUYEN THE ANH', '1/1/1990', '280 AN DUONG VUONG', 'CNTT-K35', 'VA', '123456'
GO

-- procedure list class
create or alter procedure class_list
as
BEGIN 
	SELECT * FROM LOP
END;
--EXEC class_list
GO

--STUDENT OF CLASS THAT BELONG TO NHANVIEN
CREATE or ALTER PROCEDURE class_list_nhanvien(
	@MANV VARCHAR(20)
)
AS
BEGIN
	SELECT sv.masv as 'Mã sinh viên', 
			sv.hoten as 'Họ tên', 
			sv.ngaysinh as 'Ngày sinh', 
			sv.diachi as 'Địa chỉ', 
			sv.malop as 'Mã lớp', 
			sv.tendn as 'Tên đăng nhập' 
		FROM SINHVIEN sv join LOP l ON sv.MALOP = l.MALOP
		                 join NHANVIEN nv on nv.MANV = l.MANV
		WHERE nv.MANV = @MANV;
END
--EXEC class_list_nhanvien 'NV01';
GO

-- procedure list student
CREATE or ALTER PROCEDURE student_list(
	@MALOP VARCHAR(20)
)
AS
	SELECT masv as 'Mã sinh viên', 
			hoten as 'Họ tên', 
			ngaysinh as 'Ngày sinh', 
			diachi as 'Địa chỉ', 
			malop as 'Mã lớp', 
			tendn as 'Tên đăng nhập' 
	FROM SINHVIEN WHERE MALOP = @MALOP
--EXEC student_list 'CNTT-K35'
GO

-- procedure update student
CREATE OR ALTER PROCEDURE student_update_info(
	@MaNV varchar(20),
	@MaSV NVARCHAR(20),
    @HOTEN as NVARCHAR(100) = NULL,
    @NGAYSINH as DATETIME = NULL,
    @DIACHI as NVARCHAR(200) = NULL,
    @MALOP as VARCHAR(20) = NULL,
    @TENDN as NVARCHAR(100) = NULL
)
AS
    BEGIN
	-- CHECK RELATIONSHIP SV VS NV
        DECLARE cur CURSOR
        FOR SELECT NV.MANV, SV.MASV, SV.HOTEN, SV.NGAYSINH, SV.DIACHI, SV.MALOP, SV.TENDN
            FROM SINHVIEN SV JOIN LOP ON SV.MALOP = LOP.MALOP
                JOIN NHANVIEN NV ON NV.MANV = LOP.MANV
            WHERE SV.MASV = @MaSV AND NV.MANV = @MaNV
    END
    -- update if not null
    BEGIN
        -- UPDATE INFO
        OPEN cur
        FETCH NEXT FROM cur
		IF @@FETCH_STATUS != -1
        BEGIN        
			IF @HOTEN IS NOT NULL
				UPDATE SINHVIEN SET HOTEN = @HOTEN WHERE MASV = @MaSV
			IF @NGAYSINH IS NOT NULL
				UPDATE SINHVIEN SET NGAYSINH = @NGAYSINH WHERE MASV = @MaSV
			IF @DIACHI IS NOT NULL
				UPDATE SINHVIEN SET DIACHI = @DIACHI WHERE MASV = @MaSV
			IF @TENDN IS NOT NULL
				UPDATE SINHVIEN SET TENDN = @TENDN WHERE MASV = @MaSV
		END
        DEALLOCATE cur   
    END
GO
--EXEC student_update_info 'NV01', 'SV01', NULL, NULL, 'cp525ck', NULL, NULL, 'HP2', 10 
GO

CREATE OR ALTER PROCEDURE student_score_list(
	@MaNV varchar(20),
	@MK nvarchar(20)
)
AS
	SELECT
		SV.MASV AS N'Mã sinh viên',
		BD.MAHP AS N'Mã học phần',
		BD.DiemThi AS N'Điểm'
	FROM
		NHANVIEN NV
		JOIN LOP ON LOP.MANV = NV.MANV
		JOIN SINHVIEN SV ON SV.MALOP = LOP.MALOP
		JOIN BangDiem BD ON BD.MaSV = SV.MASV
	WHERE NV.MANV = @MANV
GO

CREATE OR ALTER PROCEDURE student_score_insert(
	@MaNV varchar(20),
	@MaSV NVARCHAR(20),
    @MAHP as VARCHAR(20),
    @DIEM as INT
)
AS
    BEGIN
		-- CHECK SV thuoc NV
		DECLARE _cur CURSOR
        FOR SELECT NV.MANV, SV.MASV, SV.HOTEN, SV.MALOP
            FROM SINHVIEN SV JOIN LOP ON SV.MALOP = LOP.MALOP
                JOIN NHANVIEN NV ON NV.MANV = LOP.MANV
            WHERE SV.MASV = @MaSV AND NV.MANV = @MaNV
	END
    -- update if not null
    BEGIN
        -- UPDATE INFO
		OPEN _cur
		FETCH NEXT FROM _cur
		IF @@FETCH_STATUS != -1
		BEGIN 
			-- Insert with encrypted score
			INSERT INTO bangdiem 
			values (@MaSV, @MaHP, @DIEM)
		END
        DEALLOCATE _cur  
    END
GO

CREATE OR ALTER PROCEDURE STUDENT_DELETE(
	@MASV VARCHAR(20)
)
AS
BEGIN

	DELETE FROM BangDiem WHERE MASV = @MASV;
	DELETE FROM SINHVIEN WHERE MASV = @MASV;

END;
GO
CREATE OR ALTER PROCEDURE SCORE_DELETE(
	@MASV VARCHAR(20),
	@MAHP VARCHAR(20)
)
AS
BEGIN

	DELETE FROM BangDiem WHERE MASV = @MASV AND MaHP=@MAHP
END;

GO


CREATE OR ALTER PROCEDURE NHANVIEN_DELETE(
	@MANV VARCHAR(20)
)
AS
BEGIN

	DELETE FROM NHANVIEN WHERE MANV = @MANV;

END;

GO

--EXEC STUDENT_DELETE 'SV05';


		
-- View deciphered score below

------------------------
-- Insert and show data
------------------------
SELECT * FROM SINHVIEN
--EXEC SP_INS_SINHVIEN N'SV02', 'NGUYEN THE ANH', '1/1/2000', '280 AN DUONG VUONG', 'SH-K35', 'VA', '123456'
--EXEC SP_INS_SINHVIEN 'SV03','ABC','1/1/2012','100','CNTT-K35','VB'
SELECT * FROM NHANVIEN
--EXEC SP_INS_PUBLIC_ENCRYPT_NHANVIEN 'NV01', 'NGUYEN VAN A', 'nva@yahoo.com', 3000000, 'NVA', N'123456'

SELECT * FROM LOP
--INSERT INTO LOP VALUES('CNTT-K35', 'CNTT', 'NV01')
--INSERT INTO LOP VALUES('SH-K35', 'SH', 'NV02')

SELECT * FROM HocPhan
--INSERT INTO HocPhan VALUES('HP1', 'TOAN', 2)
--INSERT INTO HocPhan VALUES('HP2', 'LY', 2)

SELECT * FROM BANGDIEM
--INSERT INTO BANGDIEM VALUES('SV01', 'HP1', 5)
--INSERT INTO BANGDIEM VALUES('SV01', 'HP2', 10)

--------------------------
-- Test encrypt DIEMTHI
--------------------------
--SELECT SV1.MASV, BD.MAHP, CONVERT(VARCHAR(64), DECRYPTBYASYMKEY(ASYMKEY_ID('NV01'), 
--				BD.DiemThi, 
--				N'123456')) 
--FROM NHANVIEN NV1 JOIN LOP ON LOP.MANV = NV1.MANV JOIN SINHVIEN SV1 ON SV1.MALOP = LOP.MALOP JOIN BangDiem BD ON BD.MaSV = SV1.MASV

